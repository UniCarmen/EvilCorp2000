@model NewProductModalPartialModel


<div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">
                @(Model.ValidatedProduct.ProductId == Guid.Empty ? "New Product" : "Alter Product")
            </h5>

            @if (ViewData.ModelState["ProductValidation"]?.Errors.Any() == true)
            {
                <div class="alert alert-danger">
                    @foreach (var error in ViewData.ModelState["ProductValidation"].Errors)
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            <form method="post" asp-page-handler="CloseModal">
                <button type="submit" class="btn-close" aria-label="Close"></button>
            </form>
        </div>
        <div class="modal-body">

            @if (Model.ValidatedProduct.ProductPicture != null)
            {
                <div class="mb-3 d-flex justify-content-center align-items-center">
                    <img src="data:image/png;base64,@Model.ValidatedProduct.ProductPicture" class="custom-display-image" style="max-width:100px; max-height:100px; height:auto; width:auto;" />
                </div>
            }
          
            <form method="post" class="border p-4 rounded shadow-sm bg-light mb-4" asp-page-handler="SaveProduct">

                <input asp-for="ValidatedProduct.ProductId" type="hidden" />
                <input asp-for="CategoryIdsJson" type="hidden" />
                <input asp-for="DiscountsJson" type="hidden" />
                <input asp-for="ValidatedProductJson" type="hidden" />
                

                <div class="mb-3">
                    <label asp-for="@Model.ValidatedProduct.ProductName" class="form-label"></label>
                    <input asp-for="@Model.ValidatedProduct.ProductName" class="form-control" />
                    <span asp-validation-for="@Model.ValidatedProduct.ProductName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="@Model.ValidatedProduct.Description" class="form-label"></label>
                    <textarea asp-for="@Model.ValidatedProduct.Description" class="form-control"></textarea>
                    <span asp-validation-for="@Model.ValidatedProduct.Description" class="text-danger"></span>
                </div>


                @if (Model.Categories != null)
                {
                    <div class="mb-3">
                        <label asp-for="@Model.ValidatedProduct.SelectedCategoryIds" class="form-label"></label>
                        <select asp-for="@Model.ValidatedProduct.SelectedCategoryIds" class="form-select" multiple>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>

                            }
                        </select>
                        <small class="form-text text-muted">Hold Ctrl to select multiple categories</small>
                        <span asp-validation-for="@Model.ValidatedProduct.SelectedCategoryIds" class="text-danger"></span>
                    </div>
                }


                <div class="mb-3">
                    <label asp-for="@Model.ValidatedProduct.Price" class="form-label"></label>
                    <div class="input-group">
                        <input asp-for="@Model.ValidatedProduct.Price" class="form-control" type="number" step="0.01" aria-describedby="currency-symbol" />
                        <span class="input-group-text" id="currency-symbol">€</span>
                    </div>
                    <span asp-validation-for="@Model.ValidatedProduct.Price" class="text-danger"></span> 
                </div>

                <div class="mb-3">
                    <label asp-for="@Model.ValidatedProduct.AmountOnStock" class="form-label"></label>
                    <input asp-for="@Model.ValidatedProduct.AmountOnStock" class="form-control" />
                    <span asp-validation-for="@Model.ValidatedProduct.AmountOnStock" class="text-danger"></span>
                </div>

                <div class="d-flex justify-content-end mt-3">
                    <button type="submit" class="btn btn-success me-2" formaction="?handler=SaveProduct">
                        @(Model.ValidatedProduct.ProductId == Guid.Empty ? "Add New Product" : "Save and Close")
                        @Html.AntiForgeryToken()
                    </button>

                    
                </div>

            </form>



            @* ProductPicture *@
            @* EncodingType because ImageUploads needs specific meta data  *@
            <form method="post" class="border p-4 rounded shadow-sm bg-light mb-4" enctype="multipart/form-data" asp-page-handler="ImageUpload">
                @* <input asp-for="ValidatedProduct.ProductId" type="hidden" /> *@
                <input asp-for="CategoryIdsJson" type="hidden" />
                <input asp-for="DiscountsJson" type="hidden" />
                <input asp-for="ValidatedProductJson" type="hidden" />
                
                <div class="mb-3">
                    <label asp-for="@Model.ImageFile" class="form-label"></label>
                    <input asp-for="@Model.ImageFile" class="form-control" type="file" />
                    @* <label for="imageFile" class="form-label">Upload Image</label>
                    <input type="file" class="form-control" name="imageFile" id="imageFile" /> *@
                </div>
                <p>
                    By uploading a new product picture the old one is going to be overwritten.
                </p>
                <div class="d-flex justify-content-end mt-3">
                    <button type="submit" class="btn btn-primary">Upload</button>
                    @Html.AntiForgeryToken()
                </div>
            </form>




            @* Discounts *@
            @if(Model.ValidatedProduct.ProductId != Guid.Empty)
            {
                <fieldset class="border p-4 rounded shadow-sm bg-light">

                    <legend>Discounts</legend>

                    @if (ViewData.ModelState["DiscountValidation"]?.Errors.Any() == true)
                    {
                        <div class="alert alert-danger">
                            @foreach (var error in ViewData.ModelState["DiscountValidation"].Errors)
                            {
                                <p>@error.ErrorMessage</p>
                            }
                        </div>
                    }

                    <!-- Neues Discount-Formular -->
                    <form method="post" asp-page-handler="AddDiscount" class="mt-3">
                        <input asp-for="ValidatedProductJson" type="hidden" />
                        <input asp-for="CategoryIdsJson" type="hidden" />

                        <div class="row g-2">
                            <div class="col-md-4">
                                <label asp-for="NewDiscount.StartDate" class="form-label">Start Date</label>
                                <input asp-for="NewDiscount.StartDate" class="form-control" type="date" />
                                <span asp-validation-for="NewDiscount.StartDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="NewDiscount.EndDate" class="form-label">End Date</label>
                                <input asp-for="NewDiscount.EndDate" class="form-control" type="date" />
                                <span asp-validation-for="NewDiscount.EndDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="NewDiscount.DiscountPercentage" class="form-label">Discount %</label>
                                <input asp-for="NewDiscount.DiscountPercentage" class="form-control" type="number" step="0.01" />
                                <span asp-validation-for="NewDiscount.DiscountPercentage" class="text-danger"></span>
                            </div>
                        </div>
                        @if (Model.DiscountOverlap)
                        {
                            <p class="text-danger">Cannot enter overlapping discount timespans.</p>
                        }
                        <div class="d-flex justify-content-end mt-3 mb-3">
                            <button type="submit" class="btn btn-success me-2">Add Discount and Save</button>
                            @Html.AntiForgeryToken()
                        </div>
                    </form>

                    <!-- Liste bestehender Discounts -->
                    @if (Model.ValidatedProduct.Discounts != null && Model.ValidatedProduct.Discounts.Any())
                    {
                        <div class="mb-3">
                            <ul class="list-group">
                                @foreach (var discount in Model.ValidatedProduct.Discounts)
                                {
                                    var discountedPrice = ((double)Model.ValidatedProduct.Price) - (((double)Model.ValidatedProduct.Price) * (discount.DiscountPercentage / 100));
                                    var dicountedDecimalPrice = Convert.ToDecimal(discountedPrice).ToString("C");
                                    var discountedAmount = (((double)Model.ValidatedProduct.Price) * (discount.DiscountPercentage / 100));
                                    var discountedAmountDecimal = Convert.ToDecimal(discountedAmount).ToString("C");

                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong>Start:</strong> @discount.StartDate.ToShortDateString()
                                            <strong>End:</strong> @discount.EndDate.ToShortDateString()
                                            <strong>Percentage:</strong> @discount.DiscountPercentage%
                                            <strong> Discounted Price:</strong> @dicountedDecimalPrice
                                            <strong> Discount: </strong> @discountedAmountDecimal
                                        </div>
                                        <div>
                                            <!-- Button zum Löschen -->
                                            <form method="post" asp-page-handler="DeleteDiscount" class="d-inline">
                                                <input asp-for="DiscountsJson" type="hidden" />
                                                <input asp-for="CategoryIdsJson" type="hidden" />
                                                <input asp-for="ValidatedProductJson" type="hidden" />

                                                <input type="hidden" name="discountId" value="@discount.DiscountId" />
                                                <input type="hidden" name="productId" value="@Model.ValidatedProduct.ProductId" />
                                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                            </form>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                        <p>Deleted Discounts can't be restored!</p>
                    }
                    else
                    {
                        <p class="text-muted">No discounts added yet.</p>
                    }

                </fieldset>
            }

            <fieldset class="border p-3 mb-3">
                
                
                @* <!-- Liste bestehender Discounts -->
                @if (Model.ValidatedProduct.Discounts != null && Model.ValidatedProduct.Discounts.Any())
                {
                    <div class="mb-3">
                        <ul class="list-group">
                            @foreach (var discount in Model.ValidatedProduct.Discounts)
                            {
                                var discountedPrice = ((double)Model.ValidatedProduct.Price) - (((double)Model.ValidatedProduct.Price) * (discount.DiscountPercentage / 100));
                                var dicountedDecimalPrice = Convert.ToDecimal(discountedPrice).ToString("C");
                                var discountedAmount = (((double)Model.ValidatedProduct.Price) * (discount.DiscountPercentage / 100));
                                var discountedAmountDecimal = Convert.ToDecimal(discountedAmount).ToString("C");

                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>Start:</strong> @discount.StartDate.ToShortDateString()
                                        <strong>End:</strong> @discount.EndDate.ToShortDateString()
                                        <strong>Percentage:</strong> @discount.DiscountPercentage%
                                        <strong> Discounted Price:</strong> @dicountedDecimalPrice
                                        <strong> Discount: </strong> @discountedAmountDecimal
                                    </div>
                                    <div>
                                        <!-- Button zum Löschen -->
                                        <form method="post" asp-page-handler="DeleteDiscount" class="d-inline">
                                            <input asp-for="DiscountsJson" type="hidden" />
                                            <input asp-for="CategoryIdsJson" type="hidden" />
                                            <input asp-for="ValidatedProductJson" type="hidden" />

                                            <input type="hidden" name="discountId" value="@discount.DiscountId" />
                                            <input type="hidden" name="productId" value="@Model.ValidatedProduct.ProductId" />
                                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                        </form>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                    <p>Deleted Discounts can't be restored!</p>
                }
                else
                {
                    <p class="text-muted">No discounts added yet.</p>
                } *@
            </fieldset>
            




            <form method="post" asp-page-handler="CloseModal" class="d-inline">
                @* Explizites CloseModalHandler explizit mit formaction nicht notwendig, da kein verschachteltes Form *@
                <button type="submit" class="btn btn-secondary" formaction="?handler=CloseModal">Close</button>
            </form>
        </div>

    </div>
</div>
@page
@model ProductManagementModel
@using RazorPagesSpielwiese.Models
@using RazorPagesSpielwiese.Pages.ProductManagement
@using RazorPagesSpielwiese.Pages.ProductManagement.Partials

@{
    ViewData["Title"] = "Product Management";
}

<div id="modalState" data-modal-state="@Model.ModalState"></div>

<script src="/js/openModalScript.js?v=@DateTime.Now.Ticks"></script>


@*Modal für AlterProduct aus der Tabelle extrahiert, damit nur eines gerendert wird*@
@if (Model.ModalState == ShowModalState.New && Model.SelectedProductId != Guid.Empty)
{
    <div class="modal fade modal-visible show" id="alterProductModal" tabindex="-1" aria-labelledby="alterProduct" aria-hidden="true" data-bs-backdrop="static">
        @await Html.PartialAsync("Partials/NewAndAlterProductModalPartial", new NewProductModalPartialModel1 { ValidatedProduct = @Model.ValidatedProduct, Categories = Model.Categories })
    </div>
}



<h1>@ViewData["Title"]</h1>

<p>Mange, manage, manage</p>



<div class="d-flex justify-content-between align-items-center mb-4">
    <h3>Product Management</h3>

    <form method="post" asp-page-handler="ShowNewProductModal">
        <input type="hidden" name="SelectedProductId" value="@Guid.Empty" />
        <button type="submit" class="btn btn-primary">Add New Product</button>
    </form>

    @*Modal für NewProduct*@
    @if (Model.ModalState == ShowModalState.New && Model.SelectedProductId == Guid.Empty)
    {
        <div class="modal fade modal-visible" id="newProductModal" tabindex="-1" aria-labelledby="newProduct" aria-hidden="true" data-bs-backdrop="static">
            @await Html.PartialAsync("Partials/NewAndAlterProductModalPartial", new NewProductModalPartialModel1 { ValidatedProduct = new ValidatedProduct {ProductId = Guid.Empty}, Categories = Model.Categories })
        </div>
    }

</div>



<table class="table">
    <thead >
        <tr>
            <th>Name</th>
            <th></th>
            <th class="descriptionTh">Description</th>
            <th>Price</th>
            <th>Discounts</th>
            <th>Categories</th>
            <th>Rating</th>
            <th>Amount on Stock</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Products != null)
        {
            @foreach (ProductForInternalUseDTO product in Model.Products)
            {
                <tr>
                    <td>
                        <p>
                            <a href="#" data-bs-toggle="modal" data-bs-target="#productDetailsModal-@product.ProductId">@product.ProductName</a>
                            @await Html.PartialAsync("Partials/ProductDetailsModalPartial", new ProductDetailsModalPartialModel { Product = product })
                        </p>

                        <p>@product.ProductId</p>

                        @* <form method="post" asp-page-handler="ShowAlterProductModal">
                            <input type="hidden" name="SelectedProductId" value="@product.ProductId" />
                            <button type="submit" class="btn btn-primary">Alter Product</button>
                        </form> *@

                        <form method="post" asp-page-handler="ShowNewProductModal">
                            <input type="hidden" name="SelectedProductId" value="@product.ProductId" />
                            <button type="submit" class="btn btn-primary">Alter Product</button>
                        </form>


                        @* <form method="post" asp-page-handler="ShowAlterProductModal">
                            <button type="submit" class="btn btn-primary">Alter Product</button>
                </form>*@


                        @* @if (Model.ModalState == ShowModalState.Alter)
                        {
                            <div class="modal fade modal-visible show" id="alterProductModal-@product.ProductId" tabindex="-1" aria-labelledby="alterProduct" aria-hidden="true">
                                @await Html.PartialAsync("Partials/AlterProductModalPartial", new AlterProductModalPartialModel { Product = product, Categories = Model.Categories })
                            </div>
                        }  *@

                        @* <a href="?selectedProductId=@product-ProductId" data-bs-toggle="modal" data-bs-target="#alterProductsModal-@product.ProductId">Alter Product</a>
                        @await Html.PartialAsync("Partials/AlterProductModalPartial", new AlterProductModalPartialModel { Product = product, Categories = Model.Categories }) *@
                    </td>
                    <td>
                        <p>@product.ProductPicture</p>
                    </td>
                    <td>
                        <p>@product.Description</p>
                    </td>
                    <td>
                        <p>@product.Price</p>
                    </td>
                    <td>
                        @foreach (DiscountDTO discount in @product.Discounts)
                        {
                            //TODO: price in euro oder so
                            <p>@discount.StartDate.ToShortDateString() - @discount.EndDate.ToShortDateString() -@discount.DiscountPercentage%</p>
                            <p>Discounted Price: @(@product.Price / 100.0m * (100.0m - ((decimal)discount.DiscountPercentage)))</p>
                        }
                    </td>
                    <td>
                        @foreach (CategoryDTO category in product.Categories)
                        {
                            <p>@category.CategoryName</p>
                        }
                    </td>
                    <td>
                        <p>@product.Rating</p>
                        @*<i class="bi bi-star-fill"></i>*@
                    </td>
                    <td>
                        <p>@product.AmountOnStock</p>
                    </td>
                </tr>
            }
        }
        
    </tbody>
</table>



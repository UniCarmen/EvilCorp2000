@page
@model ShopViewModel
@{
    ViewData["Title"] = "Villain Shop";
}

@* Seitenindividuelle Verwendung von Stylesheets *@
@section Styles {
    <link rel="stylesheet" href="~/css/shopStyle.css" />
}


@* TODO1: Als Partial machen *@
@* Sorting UI *@
@* <div class="mb-3">
    <form method="get">
        <select name="sortOrderString" class="sorting-select" onchange="this.form.submit()">
        @foreach (var order in Model.SortOrderAndDisplayStrings)
        {
            @if (order.Item1 == Model.SortOrder)
            {
                <option value="@order.Item1" selected>@order.Item2</option>
            }
            else
            {
                <option value="@order.Item1">@order.Item2</option>
            }
        }
    </select>
    </form>
</div> *@
@* <div class="shop-toolbar">

    <div class="sort-section">
        <label for="sortOrderSelect">Sort by:</label>
        <form method="get">
            <select id="sortOrderSelect" name="sortOrderString" class="sorting-select" onchange="this.form.submit()">
                @foreach (var order in Model.SortOrderAndDisplayStrings)
                {
                    <option value="@order.Item1" selected="@(order.Item1 == Model.SortOrder)">
                        @order.Item2
                    </option>
                }
            </select>
        </form>
    </div>
</div> *@

<div class="shop-toolbar">
    <div class="pagination-wrapper">
        @await Html.PartialAsync("_PaginationPartial", (Model.SortOrder, Model.PageNumber, Model.MaxPageCount, Model.PageSize))
    </div>

    <div class="sort-section">
        <label for="sortOrderSelect">Sort by:</label>
        <form method="get">
            <select id="sortOrderSelect" name="sortOrderString" class="sorting-select" onchange="this.form.submit()">
                @foreach (var order in Model.SortOrderAndDisplayStrings)
                {
                    <option value="@order.Item1" selected="@(order.Item1 == Model.SortOrder)">
                        @order.Item2
                    </option>
                }
            </select>
        </form>
    </div>
</div>


<div class="container">

    <div class="product-grid">

        @foreach (var product in Model.ProductsForSale)
        {
            <div class="product-card">

                <h3>@product.ProductName</h3>
                @if (product.DiscountedPrice.HasValue)
                {
                    <div class="product-box">
                        <img src="@product.ProductPicture" alt="@product.ProductName" />
                        <div class="ribbon">@($"{product.Discount.Value}%")</div>
                    </div>
                }
                else
                {
                    <img src="@product.ProductPicture" alt="@product.ProductName" />
                }

                <p>@product.Description</p>

                @if (product.Rating.HasValue)
                {
                    <p>@product.Rating.Value.ToString()</p>


                    double rating = product.Rating.Value; // z. B. 4.3
                    var fillPercents = Enumerable.Range(0, 5).Select(i =>
                    {
                        if (i < Math.Floor(rating)) return 100;
                        if (i > rating) return 0;
                        return (int)((rating - Math.Floor(rating)) * 100);
                    }).ToList();


                    <div class="stars-container">
                        @for (int i = 0; i < 5; i++)
                        {
                            <span class="star-precise" style="--percent: @fillPercents[i]%">★</span>
                        }
                    </div>
                }

                @if (product.DiscountedPrice.HasValue)
                {
                    <div class="product-box">
                        <span class="price strike">@product.Price.ToString("C")</span>
                        <span class="highlighted-price">@product.DiscountedPrice.Value.ToString("C")</span>
                    </div>
                }
                else
                {
                    <span class="price">@product.Price.ToString("C")</span>
                }
                <form method="post">
                    <input type="hidden" name="productId" value="@product.ProductId" />
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        }
    </div>

    @await Html.PartialAsync("_PaginationPartial", (Model.SortOrder, Model.PageNumber, Model.MaxPageCount, Model.PageSize))

</div>